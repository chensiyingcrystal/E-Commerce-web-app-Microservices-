"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Listener = void 0;
class Listener {
    //a pre-initialized nats client
    constructor(client) {
        //time for this subscriber to ack a message
        this.ackWait = 5 * 1000; //5s
        this.client = client;
    }
    //customed subscription options
    subscriptionOptions() {
        return this.client.subscriptionOptions()
            .setDeliverAllAvailable()
            .setManualAckMode(true)
            .setAckWait(this.ackWait)
            .setDurableName(this.queueGroupName);
    }
    //code to set up the subscription
    listen() {
        const subscription = this.client.subscribe(this.subject, this.queueGroupName, this.subscriptionOptions());
        subscription.on('message', (msg) => {
            console.log(`Message received: ${this.subject} /
          ${this.queueGroupName}`);
            const parsedData = this.parseMessage(msg);
            //customed function to fun when a message is received
            //defined in child class
            this.onMessage(parsedData, msg);
        });
    }
    //parse a message
    parseMessage(msg) {
        const data = msg.getData();
        return typeof data === 'string' ? JSON.parse(data) : JSON.parse(data.toString('utf8'));
    }
}
exports.Listener = Listener;
